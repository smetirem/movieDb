
package views;

import controllers.FavoriteList;
import java.util.Collection;
import java.util.Vector;
import javax.persistence.EntityManager;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public class EditListsWrapper extends javax.swing.JInternalFrame {

    /**
     * Creates new form EditListsWrapper
     *
     */
    EntityManager con = MainMenuWrapper.con;
    private DefaultListModel favModel = new DefaultListModel();
    controllers.Movie movieContr = new controllers.Movie();
    controllers.FavoriteList listContr = new controllers.FavoriteList();
    
    public EditListsWrapper() {
        initComponents();
        MoviesJTable.setEnabled(false);
        //Απόκρυψη κεντρικής μπάρας του internalJFrame
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        
        
        favModel.removeAllElements();
        FavoritesJlist.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION);
        FavoritesJlist.setModel(favModel);

        Vector favorites = (Vector) FavoriteList.getAllFavoriteListsFromDerbyDb(con);
        FavoritesJlist.setListData(favorites);

    }
    
    public void clearJlistComponent(){
        favModel.removeAllElements();
        FavoritesJlist.setModel(favModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        FavoritesJlist = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        MoviesJTable = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        CreateFavoriteList = new javax.swing.JButton();
        DeleteFavoriteButton = new javax.swing.JButton();
        EditFavoriteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(104, 115, 145));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(85, 33));
        setName(""); // NOI18N
        setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(843, 536));

        FavoritesJlist.setBackground(new java.awt.Color(204, 204, 204));
        FavoritesJlist.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        FavoritesJlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FavoritesJlistMouseClicked(evt);
            }
        });
        FavoritesJlist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                FavoritesJlistValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(FavoritesJlist);

        MoviesJTable.setAutoCreateRowSorter(true);
        MoviesJTable.setBackground(new java.awt.Color(255, 255, 204));
        MoviesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Τίτλος ταινίας", "Βαθμολογία", "Περιγραφή"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MoviesJTable.setGridColor(new java.awt.Color(255, 255, 204));
        MoviesJTable.setSelectionBackground(new java.awt.Color(153, 204, 255));
        MoviesJTable.setSelectionForeground(new java.awt.Color(255, 255, 153));
        jScrollPane2.setViewportView(MoviesJTable);

        jToolBar1.setBackground(new java.awt.Color(153, 153, 153));
        jToolBar1.setBorder(null);
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        CreateFavoriteList.setBackground(new java.awt.Color(255, 255, 255));
        CreateFavoriteList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CreateFavoriteList.setForeground(new java.awt.Color(0, 51, 102));
        CreateFavoriteList.setText("Δημιουργία");
        CreateFavoriteList.setBorder(null);
        CreateFavoriteList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CreateFavoriteList.setFocusable(false);
        CreateFavoriteList.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CreateFavoriteList.setMargin(new java.awt.Insets(0, 10, 0, 10));
        CreateFavoriteList.setMaximumSize(new java.awt.Dimension(186, 40));
        CreateFavoriteList.setMinimumSize(new java.awt.Dimension(80, 40));
        CreateFavoriteList.setOpaque(false);
        CreateFavoriteList.setPreferredSize(new java.awt.Dimension(80, 40));
        CreateFavoriteList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateFavoriteListActionPerformed(evt);
            }
        });
        jToolBar1.add(CreateFavoriteList);

        DeleteFavoriteButton.setBackground(new java.awt.Color(255, 255, 255));
        DeleteFavoriteButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DeleteFavoriteButton.setForeground(new java.awt.Color(0, 51, 102));
        DeleteFavoriteButton.setText("Διαγραφή");
        DeleteFavoriteButton.setBorder(null);
        DeleteFavoriteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteFavoriteButton.setFocusable(false);
        DeleteFavoriteButton.setMargin(new java.awt.Insets(0, 10, 0, 10));
        DeleteFavoriteButton.setMaximumSize(new java.awt.Dimension(186, 40));
        DeleteFavoriteButton.setMinimumSize(new java.awt.Dimension(80, 40));
        DeleteFavoriteButton.setOpaque(false);
        DeleteFavoriteButton.setPreferredSize(new java.awt.Dimension(90, 40));
        DeleteFavoriteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        DeleteFavoriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteFavoriteButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(DeleteFavoriteButton);

        EditFavoriteButton.setBackground(new java.awt.Color(255, 255, 255));
        EditFavoriteButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditFavoriteButton.setForeground(new java.awt.Color(0, 51, 102));
        EditFavoriteButton.setText("Επεξεργασία");
        EditFavoriteButton.setBorder(null);
        EditFavoriteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EditFavoriteButton.setFocusable(false);
        EditFavoriteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EditFavoriteButton.setMargin(new java.awt.Insets(0, 10, 0, 10));
        EditFavoriteButton.setMaximumSize(new java.awt.Dimension(186, 40));
        EditFavoriteButton.setMinimumSize(new java.awt.Dimension(80, 40));
        EditFavoriteButton.setOpaque(false);
        EditFavoriteButton.setPreferredSize(new java.awt.Dimension(80, 40));
        EditFavoriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditFavoriteButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(EditFavoriteButton);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("Οι Αγαπημένες Λίστες");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateFavoriteListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateFavoriteListActionPerformed
        FavoritesJlist.clearSelection();
        String newFavName = JOptionPane.showInputDialog(CreateFavoriteList, "Ονομα λιστας αγαπημενων (μεγιστο: 50 χαρακτηρες)");

        if (newFavName != null) {
            if (newFavName.length() > 0 && newFavName.length() < 50) {
                listContr.createFavoriteList(con, newFavName);
                refresList();
            } else {
                JOptionPane.showMessageDialog(EditFavoriteButton, "Το ονομα που δωσατε δεν ειναι εγκυρο");
            }
        }
        

    }//GEN-LAST:event_CreateFavoriteListActionPerformed

    private void EditFavoriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditFavoriteButtonActionPerformed
        models.FavoriteList fav = FavoritesJlist.getSelectedValue();
        if (fav != null) {
            String newFavName = JOptionPane.showInputDialog(EditFavoriteButton, "Νέο όνομα λιστας "+ fav+" (μεγιστο: 50 χαρακτηρες)");

            if (newFavName != null) {
                if (newFavName.length() > 0 && newFavName.length() < 50) {
                    listContr.editFavorite(con, fav, newFavName);
                } else {
                    JOptionPane.showMessageDialog(EditFavoriteButton, "Το ονομα που δωσατε δεν ειναι εγκυρο");
                }
            }
        }
    }//GEN-LAST:event_EditFavoriteButtonActionPerformed

    private void DeleteFavoriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteFavoriteButtonActionPerformed
        models.FavoriteList fav = FavoritesJlist.getSelectedValue();
        if (fav != null) {
            int confirm = JOptionPane.showConfirmDialog(null, "Διαγραφη της λίστας " + fav + ";");
            if (confirm == JOptionPane.YES_OPTION) {
                Collection<models.Movie> list = fav.getMovieCollection();
                for (models.Movie m : list){
                movieContr.deleteMovieFromAAList(con, m);}
                listContr.deleteFavorite(con,fav);
                favModel.removeAllElements();
                FavoritesJlist.setModel(favModel);
                Vector favorites = (Vector) FavoriteList.getAllFavoriteListsFromDerbyDb(con);
                FavoritesJlist.setListData(favorites);
                clearTable(MoviesJTable);
            }
        }
        
    }//GEN-LAST:event_DeleteFavoriteButtonActionPerformed

    private void FavoritesJlistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_FavoritesJlistValueChanged

    }//GEN-LAST:event_FavoritesJlistValueChanged

    private void FavoritesJlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FavoritesJlistMouseClicked
        models.FavoriteList selectedFavoriteList = FavoritesJlist.getSelectedValue();
        DefaultTableModel tableModel = new DefaultTableModel();
        if (selectedFavoriteList != null) {
            Collection<models.Movie> test = FavoritesJlist.getSelectedValue().getMovieCollection();
            tableModel.setColumnIdentifiers(new String[]{"Τίτλος ταινίας", "Βαθμολογία", "Περιγραφή"});

            for (models.Movie movie : test) {

                String voteAverage = Double.toString(movie.getVoteAverage());
                tableModel.addRow(new String[]{movie.getTitle(), voteAverage, movie.getOverview()});
            }

            MoviesJTable.setModel(tableModel);
        }


	}//GEN-LAST:event_FavoritesJlistMouseClicked
        public void refresList(){
        favModel.removeAllElements();
        FavoritesJlist.setModel(favModel);
        Vector favorites = (Vector) FavoriteList.getAllFavoriteListsFromDerbyDb(con);
        FavoritesJlist.setListData(favorites);
        
        }

    //Μέθοδος που διαγράφει τις εγγραφές ενός πίνακα
    public void clearTable(JTable table){
    DefaultTableModel model = (DefaultTableModel)table.getModel();
    model.getDataVector().removeAllElements();
    model.fireTableDataChanged(); // notifies the JTable that the model has changed
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateFavoriteList;
    private javax.swing.JButton DeleteFavoriteButton;
    private javax.swing.JButton EditFavoriteButton;
    private javax.swing.JList<models.FavoriteList> FavoritesJlist;
    private javax.swing.JTable MoviesJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
